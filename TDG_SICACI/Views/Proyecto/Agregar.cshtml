@model Agregar_ProyectoModel
@{
    IEnumerable<SelectListItem> lstRoles = ViewBag.Roles;

    List<SelectListItem> responsableEjecucion = new List<SelectListItem>();
    responsableEjecucion.Add(new SelectListItem() { Text = "Sofy", Value = "Sofy", Selected = true });
    responsableEjecucion.Add(new SelectListItem() { Text = "Sofy", Value = "Sofy", });
    responsableEjecucion.Add(new SelectListItem() { Text = "Sofy", Value = "Sofy", });
    responsableEjecucion.Add(new SelectListItem() { Text = "Sofy", Value = "Sofy", });
    responsableEjecucion.Add(new SelectListItem() { Text = "Sofy", Value = "Sofy", });
    responsableEjecucion.Add(new SelectListItem() { Text = "Sofy", Value = "Sofy", });
    responsableEjecucion.Add(new SelectListItem() { Text = "Sofy", Value = "Sofy", });
    responsableEjecucion.Add(new SelectListItem() { Text = "Sofy", Value = "Sofy", });

    List<SelectListItem> responsableAprobacion = new List<SelectListItem>();
    responsableAprobacion.Add(new SelectListItem() { Text = "Sofy", Value = "Sofy", Selected = true });
    responsableAprobacion.Add(new SelectListItem() { Text = "Sofy", Value = "Sofy" });
    responsableAprobacion.Add(new SelectListItem() { Text = "Sofy", Value = "Sofy" });
    responsableAprobacion.Add(new SelectListItem() { Text = "Sofy", Value = "Sofy" });
    responsableAprobacion.Add(new SelectListItem() { Text = "Sofy", Value = "Sofy" });
    responsableAprobacion.Add(new SelectListItem() { Text = "Sofy", Value = "Sofy" });
    responsableAprobacion.Add(new SelectListItem() { Text = "Sofy", Value = "Sofy" });

    JFMultipleSelect_Data jfMSData = new JFMultipleSelect_Data();
    List<JFMultipleSelect_Data_Headers> jfMSHeaders = new List<JFMultipleSelect_Data_Headers>();
    jfMSHeaders.Add(new JFMultipleSelect_Data_Headers() { Label = "Grupo #1", Order = 1 });
    jfMSHeaders.Add(new JFMultipleSelect_Data_Headers() { Label = "Grupo #2", Order = 3 });
    jfMSHeaders.Add(new JFMultipleSelect_Data_Headers() { Label = "Grupo #3", Order = 2, Disabled =true });
    List<JFMultipleSelect_Data_Items> jfMSItems = new List<JFMultipleSelect_Data_Items>();
    jfMSItems.Add(new JFMultipleSelect_Data_Items() { Label = "Item 1 - Grupo #1", HeaderOrder = 1, SubText = "Prueba del texto secundario" });
    jfMSItems.Add(new JFMultipleSelect_Data_Items() { Label = "Item 2 - Grupo #1", HeaderOrder = 1, SubText = "Prueba del texto secundario" });
    jfMSItems.Add(new JFMultipleSelect_Data_Items() { Label = "Item 3 - Grupo #1", HeaderOrder = 1, SubText = "Prueba del texto secundario" });
    jfMSItems.Add(new JFMultipleSelect_Data_Items() { Label = "Item 1 - Grupo #2", HeaderOrder = 2, SubText = "Prueba del texto secundario" });
    jfMSItems.Add(new JFMultipleSelect_Data_Items() { Label = "Item 2 - Grupo #2", HeaderOrder = 2, SubText = "Prueba del texto secundario" });
    jfMSItems.Add(new JFMultipleSelect_Data_Items() { Label = "Item 1 - Grupo #3", HeaderOrder = 3, SubText = "Prueba del texto secundario" });
    
    
    jfMSData.Headers = jfMSHeaders;
    jfMSData.Items = jfMSItems;
    
  }

<script src="@BundleTable.Bundles.ResolveBundleUrl("~/Scripts/js-partialview")" type="text/javascript"></script>

@using (Html.BeginForm("Agregar", "Proyecto", null, FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "AgregarProyectoFormId" }))
{
    @Html.FormularioFor("#AgregarProyectoFormId"
        ).AddFieldFor(m => m.nombre
        ).AddFieldFor(m => m.responableEjecucion, new JFOptionsFields().SetIsInline(false).loadItems(responsableEjecucion.AsEnumerable())
        ).AddFieldFor(m => m.responableAprobacion, new JFOptionsFields().SetIsInline(false).loadItems(responsableAprobacion.AsEnumerable())
        ).AddFieldFor(m => m.objetivosAsociados, new JFMultipleSelect_Options().Set_IsMultiple(true).Set_Title("Por favor seleccione al menos un objetivo").Set_Width("100%").Set_DataStyle("btn-inverse").LoadItems(jfMSData)
        ).AddFieldFor(m => m.findingsAsociados
        ).AddFieldFor(m => m.fechaInicio
        );
    //    ).AddFieldFor(m => m.tipoCorreccion, new JFOptionsFields().SetIsInline(false).loadItems(correccion.AsEnumerable())
} 
