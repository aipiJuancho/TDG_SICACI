@{
    ViewBag.Title = "Añadir Pregunta";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Crear pregunta para el Self-Assessment</h2>
<div class="col-md-8">
    <div>
        <div class="panel panel-default">
          <div class="panel-heading"><h3 class="panel-title">Tipo de Pregunta</h3></div>
          <div class="panel-body">
            <div class="form-horizontal">
                <div class="form-group">
                    <label class="col-md-5 control-label">Tipos de pregunta:</label>
                    <div class="col-md-7">
                        <select id="cmbTipo" name="cmbTipo" class="form-control" >
                            <option value="0" selected="selected">Seleccione una opción...</option>
                            <option value="PA">Pregunta Abierta</option>
                            <option value="OM">Pregunta de opción multiple</option>
                            <option value="SM">Pregunta de selección multiple</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-5 control-label">¿Es una pregunta de GIDEM? </label>
                    <div class="col-md-7">
                        <label class="radio-inline"><input type="radio" name="opt-padd" value="S"> Si</label>
                        <label class="radio-inline"><input type="radio" name="opt-padd" value="N" checked> No</label>
                    </div>
                </div>
            </div>
          </div>
        </div>
    </div>
    <div>
        @Html.LoadPartialViewAJAX("cont-pregunta", Url.Action("_nueva_pregunta"), false)
    </div>
</div>
<div class="col-md-4">
    @Html.LoadPartialViewAJAX("cont-norma-iso", Url.Action("_norma_iso"))
</div>
<div class="col-md-12">
    <div style="width: 200px; margin: 0 auto;">
    @Html.jfButton(new JFFormButton("crear-pregunta", "Crear Pregunta", 
        JFFormButton.JFTipoBoton.Primary, true))
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        var $cmbTipo, $opt, $partialView, $radioPAdd;
        $(function () {
            $cmbTipo = $('#cmbTipo');
            $partialView = $('#cont-pregunta');
            $radioPAdd = $('input[name=opt-padd]');

            $cmbTipo.on('change', $.loadFormPregunta);  //Handler cuando cambie el ComboBox
            $radioPAdd.on('change', $.loadFormPregunta); //Handler cuando se cambie "Pregunta GIDEM"

            //Handler para añadir el parametro de Pregunta Adicional cuando se cargue la Vista Parcial
            $partialView.on('setParametros', function () {
                return 'padd=' + $radioPAdd.filter(':checked').val() + '&' + 'tipo=' + $cmbTipo.val();
            });

            $('#crear-pregunta').on('click', function (e) {
                e.preventDefault();

                /*STEP #1: Verificamos si se ha seleccionado el Tipo de Pregunta*/
                $opt = $cmbTipo.children("select option:selected");
                if ($opt.val() == 0) {
                    $.addNotificacion({ titulo: 'Formulario Incompleto', msj: 'No se puede continuar debido a que no se ha definido el "Tipo de Pregunta" a crear. Por favor, corrija estos errores y vuelva a intentarlo.', icono: 'FORM_INCOMPLETE' });
                    return;
                }

                /*STEP #2: Verificamos si se ha seleccionado la referencia a la Norma ISO*/
                if ($('#relacionado-a').attr('data-id-jeraquia') == undefined) {
                    $.addNotificacion({ titulo: 'Formulario Incompleto', msj: 'Por favor, seleccione el inciso de la Norma ISO al cual hace referencia esta pregunta.', icono: 'FORM_INCOMPLETE' });
                    return;
                }

                /*STEP #3: Verificamos que los datos del formulario de preguntas sea válido*/
                var $form = $('#formPregunta');
                if ($form.isValid() == false) return;
                
                /*STEP #4: Determinamos el tipo de pregunta que estamos creando para poder proceder*/
                if ($opt.val() == 'PA') {   //Pregunta Abierta
                    var nuevaPreguntaAbiertaModel = {
                        TipoPregunta: $opt.val(),
                        PreguntaGIDEM: $radioPAdd.filter(':checked').val(),
                        ReferenciaA: $('#relacionado-a').attr('data-id-jeraquia'),
                        FormPregunta: $form.serializeObject(),
                        OrdenVisual: ($radioPAdd.filter(':checked').val() == 'S' ? $('#OrdenVisual').val() : 0)
                    }

                    $form.sendData({
                        overwriteURL: '/pregunta/_new_pregunta_abierta',
                        overwriteData: JSON.stringify(nuevaPreguntaAbiertaModel),
                        contentType: 'application/json; charset=utf-8'
                    });

                    return;
                } else {
                    /*STEP #5: Validamos que las respuestas agregadas sean correctas*/
                    if ($.validateResponses() == false) {
                        $.addNotificacion({ titulo: 'Formulario Incompleto', msj: 'Algunas de las respuestas ingresadas no son validas. Por favor, corrija y vuelva a intentarlo.', icono: 'FORM_INCOMPLETE' });
                        return;
                    }

                    /*STEP #6: Debemos construir el ARRAY (.DOT JSON) de las respuestas*/
                    var arrayResponses = $.buildArrayResponse({
                        f_descripcion: $('input[name^="resp-descripcion"]').serializeArray(),
                        f_comentario: $('input[name^="resp-comentario"]').serializeArray(),
                        f_respuesta: $('input[name^="resp-correcta"]:checked').serializeArray(),
                        f_orden: $('input[name^="resp-orden"]').serializeArray()
                    });

                    var nuevaPreguntaMultipleModel = {
                        TipoPregunta: $opt.val(),
                        PreguntaGIDEM: $radioPAdd.filter(':checked').val(),
                        ReferenciaA: $('#relacionado-a').attr('data-id-jeraquia'),
                        FormPregunta: $form.serializeObject(),
                        OrdenVisual: ($radioPAdd.filter(':checked').val() == 'S' ? $('#OrdenVisual').val() : 0),
                        Respuestas: arrayResponses
                    }

                    $form.sendData({
                        overwriteURL: '/pregunta/_new_pregunta_multiple',
                        overwriteData: JSON.stringify(nuevaPreguntaMultipleModel),
                        contentType: 'application/json; charset=utf-8'
                    });
                }

                
            });
        });

        $.loadFormPregunta = function () {
            $opt = $cmbTipo.children("select option:selected");
            if ($opt.val() == 0)
                $partialView.empty();
            else {
                $partialView.loadPartialView();
            }
        }

        /******************************************************/
        /*Funciones y metodos para la definición de Respuestas*/
        /******************************************************/
        $.validateResponses = function () {
            var estado = true;
            var cadena = '',
                $element;

            /*STEP 1: Validamos que los campos "DESCRIPCIÓN" no se encuentren vacios*/
            $('input[name^="resp-descripcion"]').each(function (key) {
                cadena = this.value;
                $element = $(this);

                //Ante de continuar, limpiamos el elemento
                $element.parent().children('label').remove();
                $element.removeClass('input-validation-error');

                /*RULE: Campo de texto vacio*/
                if (!$.isNullOrWhiteSpace(cadena, $element)) estado = false;
            });

            /*STEP 2: Validamos que los campos "ORDEN" no se encuentren vacios*/
            $('input[name^="resp-orden"]').each(function (key) {
                cadena = this.value;
                $element = $(this);

                //Ante de continuar, limpiamos el elemento
                $element.parent().children('label').remove();
                $element.removeClass('input-validation-error');

                /*RULE: Número valido*/
                if (!$.isNumber(cadena, $element)) estado = false;
            });
            return estado;
        }

        $.isNullOrWhiteSpace = function (cadena, $element) {
            if (cadena.trim() == '') {
                $element.addClass('input-validation-error');
                $element.parent().append('<label class="table-field-error" for="' + this.name + '">Campo invalido</label>');
                return false;
            }
            return true;
        }

        $.isNumber = function (cadena, $element) {
            if (isNaN(parseInt(cadena))) {
                $element.addClass('input-validation-error');
                $element.parent().append('<label class="table-field-error" for="' + this.name + '">Invalido</label>');
                return false;
            }
            return true;
        }

        $.buildArrayResponse = function (data) {
            var arr = new Array(),
                obj;

            for (var i = 0; i < data.f_descripcion.length ; i++) {
                obj = new Object();
                obj.Descripcion = data.f_descripcion[i].value;
                obj.Comentario = data.f_comentario[i].value;
                obj.EsCorrecta = data.f_respuesta[i].value;
                obj.Orden = data.f_orden[i].value;

                arr.push(obj);
            };

            return arr;
        }
    </script>
}