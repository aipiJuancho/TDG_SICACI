@model Grid_TareaViewModel
@{
    
    Layout              = "~/Views/Shared/_Layout.cshtml";
    string itemType     = "tarea";
    string ItemType     = "Tarea";
    string theItemType  = "la " + ItemType;
    string idField      = "ID_TAREA";


    jfBSGrid<Grid_TareaViewModel> grid = new jfBSGrid<Grid_TareaViewModel>(Html, "lst");
    grid.AddColumn(u => u.ORDEN)
        .AddColumn(u => u.TITULO_TAREA)
        .AddColumn(u => u.RESPONSABLE_EJECUCION)
        .AddColumn(u => u.FECHA_FINALIZACION)
        .AddColumn(u => u.PROGRESO)
        .RowPrimaryKey(idField)
        .ShowRowNumbers(true)
        .onClick("$.handlerGridOnClick")
        .AjaxLoadData(Url.Action("DataGrid", ItemType, new {IDProyecto = ViewBag.projectId}));

    string urlAgregar   = string.Format("data-toggle=\"modal\" data-jf-load=\"{0}\"",                       Url.Action("Agregar"));  
    string urlModificar = string.Format("disabled=\"disabled\" data-toggle=\"modal\" data-jf-load=\"{0}\"", Url.Action("Modificar"));
    string urlEliminar  = string.Format("data-jf-url=\"{0}\" disabled=\"disabled\" ",                       Url.Action("Eliminar", ItemType));
  
    ViewBag.Title = "Gestionar "+itemType+"s";
    
}

<h2>Gestionar @(ItemType+"s")</h2>
<div class = "row">
    <div class = "col-xs-12 col-sm-12 col-md-10 col-lg-10">
        @grid.RenderHtml()
    </div>
    <div class="col-xs-12 col-sm-12 col-md-2 col-lg-2">
        @Html.jfButton(new JFFormButton("btnAgregar"    , " Agregar "   +ItemType, JFFormButton.JFTipoBoton.Success, true,
            classAditional:     "btn-md pull-right",
            classIcon:          "glyphicon glyphicon-plus",
            attrAditional:      urlAgregar))
        @Html.jfButton(new JFFormButton("btnModificar"  , " Modificar " +ItemType, JFFormButton.JFTipoBoton.Success, true,
            classAditional:     "btn-md pull-right",
            classIcon:          "glyphicon glyphicon-pencil",
            attrAditional:      urlModificar)) 
        @Html.jfButton(new JFFormButton("btnEliminar"   , " Eliminar "  +ItemType, JFFormButton.JFTipoBoton.Success, true,
            classAditional:     "btn-md pull-right",
            classIcon:          "glyphicon glyphicon-trash",
            attrAditional:      urlEliminar))
    </div>
</div>

@Html.bootstrapModal("modalAgregar"     , "Agregar "    +ItemType, "#btnAgregar", JFModalSize.Large)
@Html.bootstrapModal("modalModificar"   , "Modificar "  +ItemType, "#btnModificar", JFModalSize.Large)

@Html.bootstrapModal("modalArchivos"   , "Archivos Adjuntos", "#btnArchivos", JFModalSize.Large)
@Html.bootstrapModal("modalComentarios"   , "Comentarios", "#btnComentarios", JFModalSize.Large)

@section Scripts {
    <script type="text/javascript" src="@Url.Content("~/Scripts/bsGrid/jquery.bs_grid.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/bsGrid/jquery.bs_grid.en.js")"></script>
    <script type="text/javascript">
        var $btnNew, $btnElm, $btnMod, $grid;    //Definición de variables globales
        $(function () {
            @grid.GetJavaScript()

            //Instanciamos las variables globales del Script
            $btnNew = $('#btnAgregar');
            $btnMod = $('#btnModificar');
            $btnElm = $('#btnEliminar');


            $grid = $('#lst');
            var id;

            //Configuramos el boton de Eliminar 
            $btnElm.on('click', function (event) {
                event.preventDefault();

                id = $grid.bs_grid('selectedRows', 'get_ids');
                if (confirm('¿Esta seguro que desea eliminar definitivamente @theItemType "' + id + '" del sistema?'))
                    $btnElm.sendData({
                        overwriteURL: $btnElm.attr("data-jf-url") + '?@idField=' + id,
                        success: $.reloadGrid
                    });
            });

            //Configuramos el boton de Modificar
            $btnMod.on({
                open: function ()
                    {
                    $('#myModalLabel').text('Modificar @ItemType - ' + $grid.bs_grid('selectedRows', 'get_ids'));
                    },
                parametersDialog: function ()
                {
                    return '@idField=' + $grid.bs_grid('selectedRows', 'get_ids');
                },
                saveSuccess: $.reloadGrid,
                setParametros: function (e, form)
                    {
                    return form.serialize() + '&@idField=' + $grid.bs_grid('selectedRows', 'get_ids');
                    }
                });

            //Configuramos el boton de Agregar
            $btnNew.on({
                saveSuccess: $.reloadGrid,
                setParametros: function (e, form)
                {
                    alert($('#personasInvolucradas').val());
                    return form.serialize() + '&personasInvolucradas=' + $('#personasInvolucradas').val() + '&IDProyecto=@ViewBag.projectId';
                }
            });

            /***********************************************/
            /***Evento para el manejo de multiples Modales**/
            /***********************************************/
            $('.modal').on('hidden.bs.modal', function (event) {
                $(this).removeClass('fv-modal-stack');
                $('body').data('fv_open_modals', $('body').data('fv_open_modals') - 1);

                if ($('body').data('fv_open_modals') == 1) {
                    $('#cont-controls').loadPartialView();
                }

                //Eliminamos el evento de SAVEFORM manual que se ha colocado
                if ($('body').data('fv_open_modals') == 0) {
                    $('#save-modalArchivos').off('click');
                }
            });


            $('.modal').on('shown.bs.modal', function (event) {
                // keep track of the number of open modals
                if (typeof ($('body').data('fv_open_modals')) == 'undefined') {
                    $('body').data('fv_open_modals', 0);
                }

                // if the z-index of this modal has been set, ignore.
                if ($(this).hasClass('fv-modal-stack')) {
                    return;
                }

                $(this).addClass('fv-modal-stack');
                $('body').data('fv_open_modals', $('body').data('fv_open_modals') + 1);
                $(this).css('z-index', 1040 + (10 * $('body').data('fv_open_modals')));
                $('.modal-backdrop').not('.fv-modal-stack')
                        .css('z-index', 1039 + (10 * $('body').data('fv_open_modals')));
                $('.modal-backdrop').not('fv-modal-stack')
                        .addClass('fv-modal-stack');
            });
        });

        $.handlerGridOnClick = function (event, data) {
            $btnElm.removeAttr("disabled");
            $btnMod.removeAttr("disabled");
        }

        $.reloadGrid = function () {
            $btnElm.attr('disabled', 'disabled');
            $btnMod.attr('disabled', 'disabled');
            $grid.bs_grid('displayGrid', 1);
        }
    </script>